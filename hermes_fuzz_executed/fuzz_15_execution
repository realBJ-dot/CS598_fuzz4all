'use strict';
let mutatedSet = new Set();
mutatedSet.add(123);
mutatedSet = new Set(mutatedSet);
 
'use strict';
let mutatedSet = new Set();
mutatedSet.add(123);
let set = new Set();
let x = 123;
let b = {x: x, y: 123};
set[123] = b;
 
'strip' is not supported in Hermes.
'use strict';
const a = new Array()
a.push('a');
a.push('b');
let b = a.slice(1);
'use strict';
const {x, y} = function () { throw new Error() }();
'use strict';
let g = {x};
'substr' is not supported in Hermes
'use strict';
class A {
	m() {
	}
}
const a = new A();
function b() {
	return this.constructor.s;
}
const c = Object.getOwnPropertyDescriptor(A, 'prototype');
a[Symbol.toStringTag] = 'X';
b;
 
'stripe' must be a symbol.
'use strict';
const set = new Set()
set.add(123);
set.has(x => x % 2 == 0);
 
'call' is not supported in Hermes.
'use strict';
const a = new Map();
a.set(123, 10);
a.get(10);
a.has(123);
a.delete(123);
'use strict';
const a = new Map();
a.set(123, 10);
a.has(1);
a[1] = 2;
a.set(3, 3);
a.get(1);
a.set(1, '3');
'use strict';
let a = 1
a && b();
 
var set = new Set()
set['add'](function foo() {})
set['add'](function bar() {})
set['add'](function baz() {})
set['add'](function foo() {});
set['add'](function foo() {})
set['add'](function

Execution Output ------------------:
test.js:14:9: error: ';' expected
'strip' is not supported in Hermes.
        ^
