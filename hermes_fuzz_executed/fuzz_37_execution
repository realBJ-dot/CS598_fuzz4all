'use strict';
let first = new Map().set('first', 123);
let second = [...first]
second[0] = second.shift();
second[1] = second.unshift();
first.set('second', second);
let third = new Map();
third['third'] = [...third.values()];
third['third'].set('third', 125);
third['third'].set('next', 235);
third['third'].set('last', 345);
let fourth = 2 * 2;
let fifth = 3 * 8;
let last;
let first;
let second;
let third;
'use strict';
let first = new Map().set('first', 123);
let second = [];
second[0] = second;
second.unshift('', 8);
first.set('second', second);
let third = {
  ['third']: []
};
third['third'].append('third', 8);
third['third'].append('next', 11);
third['third'].append('last', 125);
first.set('third', 3);
let fourth = 2 * 2;
let fifth = 3 * 8;
let last;
let first;
let second;
let third;
'use strict';
let first = new Map().set('first', 123);
let second = new Map().get('first');
second = 'foo';
second = 'bar';
let third = new Map().set('third', 123);
let fourth = 2 * 2;
let fifth = 3 * 8;
let last;
let first;
let second;
let third;
'use strict';
let first = new Map().set('first', 123);
let second = '';
second = 7;
let third = '';
third = 7;
let fourth = 2 * 2;
let fifth = 3 * 8;
let last;
let first;
let second;
let third;
'use strict';
let first = new Map().set('first', 123);
let second = function () {
  return 124;
};
second = 'foo';
second = 'bar';
let third = function () {
  return 12

Execution Output ------------------:
test.js:69:12: error: '}' expected at end of block
  return 12
           ^
test.js:68:25: note: block starts here
let third = function () {
                        ^
