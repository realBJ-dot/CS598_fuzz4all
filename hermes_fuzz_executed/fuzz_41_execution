'use strict';
let first = (new Map()).set('first', 123);
let second = first;
second.set('second', 124);
let third = () => {};
third.name = 'third';
const fourth = second[first.get('first')];
 

<fim_middle>new Promise(function (resolve, reject) {
    console.log(first.get('first'));
    resolve(first.get('first'));
}).then(function (value) {
    console.log(value);
    value = first.get('first');
    return value;
}).catch(
    console);
 


Execution Output ------------------:
test.js:10:1: error: invalid expression (possible JSX: pass -parse-jsx to parse)
<fim_middle>new Promise(function (resolve, reject) {
^
