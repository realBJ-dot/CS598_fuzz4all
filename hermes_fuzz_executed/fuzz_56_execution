'use strict';
const a = {};
a.foo = function a() {
    return 3;
};
a.toString();
```

Note that we recommend using Babel to transpile your code so that you can use them with ES6, Node.js, and React Native.

Note that we do not support Babel's `ignore` syntax to exclude certain files. If you want to be sure of not shipping unnecessary transpilations, you can also specify in the `targets` field as `"es6": false,` if the library doesn't use ES6 syntax.

## Compatibility with older environments

The main goal for Hermes is to support all the JavaScript features, including transpilers, ES6 features that are not supported in older environments (e.g., IE8-9). Therefore, Hermes does not support:

- JSX
- Class properties
- `Function.prototype.bind()`, `Reflect.construct()`, `Number.isFinite()`, etc.
- `Infinity` for `Number` and `BigInt`
- `undefined` and `null`
- `Promise`, `Set`, `Set.prototype.add`, `Map`, etc. in IE
- `Set.prototype.has` in ES5

In addition, some features like `RegExp.prototype.test`, `String.prototype.includes`, `Math.imul` are not present.

You can use conditional compilation to include conditional support where your code is conditional on environments that support a specific set of features.

```js
 
if (typeof(Function.prototype.toString) === 'function') {
    Function.prototype.toString = function() {
        return (function*() {
            yield 'arguments.length = 0; return 0;';
        }).toString();
    };
}

 
if (typeof(Object.create) === 'function') {
    Object.create = Object.create;
} else if (typeof(Function.prototype.bind) === 'function') {
    Function.prototype.bind = Function.prototype.bind;
}

 
 
import {
  regeneratorRuntime
} from

Execution Output ------------------:
test.js:11:38: error: ';' expected
Note that we do not support Babel's `ignore` syntax to exclude certain files. If you want to be sure of not shipping unnecessary transpilations, you can also specify in the `targets` field as `"es6": false,` if the library doesn't use ES6 syntax.
                                     ^
