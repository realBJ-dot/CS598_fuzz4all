'use strict';
let a = function a() {
    return (async function a() {}).toString();
};
a.toString()
a;
'use strict';
let a = new Promise(-1);
a.toString()
a;
'use strict';
let x;
x = async () => (await Promise.resolve('done')) + '';
x;
(async function a() {
    await Promise.resolve('done');
})();
(async function a() {
    await Promise.resolve('done');
    return;
})();
 
 
'use strict';
let a = 1 + async () => await Promise.resolve(2);
a;
 
'use strict';
let a = function a() {
    return await Promise.resolve(1);
};
a;


Execution Output ------------------:
test.js:25:9: error: invalid arrow function parameter list
let a = 1 + async () => await Promise.resolve(2);
        ^~~~~~~~~~~~
