'use strict';
async function s1() {
    return Promise.resolve('a');
}
async function s2() {
    let x0 = 5;
    let x1 = x0 + 1;
    return Promise.resolve(x1);
}
s1().then(x => s2().then(x => x + x)).then(x => x - x);
```

## Limitations and current status

Hermes JS is still a work in progress, this means that it is subject to breaking changes at any time. Please be aware of the following limitations for now. These limitations are intentionally kept to a minimum and do not change anytime soon. 

| Hermes Support        | ES6 Support |
|:------------------------|:-------------|
| Array.prototype.some(func) |             |
| Array.isArray(x)        |             |
| BigInt                 |             |
| Destructuring assignment |             |
| ES6 Arrow functions    |             |
| Generator functions     |             |
| Intl API              |             |
| Iteration             |             |
| Named capture groups   |             |
| Optional chaining      |             |
| Realms and Symbol.species |             |
| String concat         |             |
| Template string literals |             |
| Typed arrays           |             |
| with statement         |             |
| Destructuring assignment on Objects when using with statement. |             |
| Destructuring assignment on Classes. |             |

## Notes

- Support for some features and APIs from RN or Web is not yet complete. 
  * Refer to [rncore ](https: 
- Web has been temporarily removed, see [RN limitations](#limitations-and-current-status) for details.

## License

Hermes is under MIT and is developed by Facebook Inc.


Execution Output ------------------:
test.js:46:1: error: non-terminated template literal

^
test.js:11:3: note: template literal started here
```
  ^
test.js:46:1: error: invalid expression

^
