'use strict';
<fim_middle>var x = Symbol('x');
var y = Symbol('y');
function _some(x, f) {
    return ((_a = f(x)) === null || _a === void 0? void 0 : _a.done) === true;
}
Array.prototype.some.call(Array(23), function (index) {
    return x;
});
 
'use strict';
var x = Symbol('x');
var y = Symbol('y');
var z = Symbol('z');
function _sum(x, y) {
    return ((_a = x + y) === null || _a === void 0? void 0 : _a.done) === true;
}
function _multi(result) {
    return ((_b = result * result) === null || _b === void 0? void 0 : _b.done) === true;
}
function _some(x, f) {
    return ((_a = f(x)) === null || _a === void 0? void 0 : _a.done) === true;
}
function _some2(x) {
    return ((_c = x.value * x.value) === null || _c === void 0? void 0 : _c.done) === true;
}
function _some3(x) {
    return ((_d = x.value.value) === null || _d === void 0? void 0 : _d.done) === true;
}
function _some4(x) {
    return ((_e = x instanceof x) === null || _e === void 0? void 0 : _e.done) === true;
}
function _sum2(x, y) {
    return ((_a = x) + (_b = y) === null || _b === void 0? void 0 : _b.done) === true;
}
function _sub2(x, y) {
    return ((_a = x + y) - (_b = 0) === null || _b === void 0? void 0 : _b.done) === true;
}
function _mult2(x, y) {
    return ((_a = x * y) === null || _a === void 0? void 0 : _a.done) === true;
}
function _abs(x) {
    return ((_a = Math.abs(x)) === null || _a === void 0? void 0 :

Execution Output ------------------:
test.js:2:1: error: invalid expression (possible JSX: pass -parse-jsx to parse)
<fim_middle>var x = Symbol('x');
^
