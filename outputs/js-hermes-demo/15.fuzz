const fs = require('fs');

fs.open('/sdcard/b.txt', 'a', (err, f_file) => { console.log(err);
    fs.write(f_file, 'Test\r\n', 25, (err) => { console.log(err);
        fs.write(f_file, 'Test 2\r\n', 25, (err) => { console.log(err);
            fs.write(f_file, 'Test 2.2\r\n', 25, (err) => { console.log(err);
                fs.writeFile('/sdcard/b.txt', 'New text that will not appear in final file', 'utf-8', (err) => { console.log(err);
                    console.log(fs.readFileSync('/sdcard/b.txt'));  
                    console.log(fs.statSync('/sdcard/b.txt', 1));  
                });
            });
        });
    });
});
console.log(fs.readdirSync('/sdcard'));  
console.log(fs.existsSync('/sdcard/b.txt'));  
const x = { a: 1, b: 2 };
console.log(x);  
console.log(x.a);  
console.log(delete x.a);  
console.log(x);  
console.log(!fs.statSync('/sdcard/b.txt', 1).isDir());  
console.log(fs.unlinkSync('/sdcard/b.txt'));  
console.log('Expect'+ fs.readFileSync('/sdcard/b.txt'));  
fs.createReadStream('/sdcard/b.txt').pipe(fs.createWriteStream('/sdcard/a.txt'));  
console.log(fs.readFileSync('/sdcard/a.txt'));  
console.log(fs.readdirSync('/sdcard'));  
console.log(fs.statSync('/sdcard/a.txt', 1).isDir());  
console.log('Expect'+ fs.readFileSync('/sdcard/a.txt'));  
const readData = fs.readFile('/sdcard/a.txt');  
const readData2 = fs.readFileSync('/sdcard/a.txt');  
const readStream = fs.createReadStream('/sdcard/a.txt');  
const readStream2 = fs.readFileSync('/sdcard/a.txt');  
console.log('Expect'+ readData);  
console.log('Expect'+ readData2);  
console.log('Expect'+ readStream);