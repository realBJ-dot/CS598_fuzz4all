const fs = require('fs');

const path = require('path');
const { spawn } = require('child_process');

const runHermes = (code, config = {
  entryFile,
  binaryFile,
  args,
  binaryPath,
  stdout,
  stderr,
  shell,
  cwd
}) => {
  const argsOptions = Object.entries(config.args || {}).map(([key, val]) => `-X${key}="${val}"`).join(' ');
  return new Promise((resolve, reject) => {
    const child = spawn(`${binaryPath}${shell? shell : ''}`, [binaryFile, `${debug? '-O' : ''}${binaryFile}${debug? '-o' : ''}${code}`, argsOptions, debug && '-d' || ''], {
      cwd,
      shell
    });

    child.stderr.on('data', data => {
      console.error(`[Hermes] ${data}`);
    });

    child.on('close', code => {
      if (code) {
        reject(new Error(`[Hermes] Unexpected exit code: ${code}`));
      }
      resolve(stdout? Buffer.from(stdout) : undefined);
    });
  });
};
