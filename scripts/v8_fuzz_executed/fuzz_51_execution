'use strict';
'use v8';
function sumArray(arr) {
    let total = 0;
    for (let obj of arr) {
        total += obj;
        const totalInGlobal = obj2;
    }
    return total + arr.length;
}
let arr = [1, 2, 3];
const arr2 = [1, 2, 3];
const arr3 = [1, 2, 3];
const obj = {one : 1, two : 2};
const obj1 = 100;
const obj2 = 100;
console.log(sumArray(arr2));
console.log(sumArray([arr2]));
console.log(sumArray(obj));
console.log(sumArray({arr : arr2}));
console.log(sumArray(obj2));
 
'use strict';
 
 
let GCEnabledTimer = setInterval(function () {
    if (GCEnabled) {
        clearInterval(GCEnabledTimer);
        console.log("Garbage collector enabled");
    }
    else {
        console.log("Garbage collector disabled");
    }
}, 50);
 
let GCEnabled = setInterval(function () {
    console.log(GCEnabled);
    function callback() {
        console.log("A callback running");
        GCEnabled = false;
    }
    callback();
}, 500);<fim_middle>'use v8';
function callFunction() {
     
    setTimeout(function () {
         
        const callback = function () {
            console.log(this.name);
            clearInterval(t);
        }
         
        const t = setTimeout(callback, 15);
    }, 250);
}
console.log("Call the function");
callFunction();
const arr = [0, 1, 2];
const objArr = [0, 1, 2];
const arr2 = [0, 1, 2];
const objArr2 = [0, 1, 2];
let obj = {
    one: 1,
    two : 2
}
let obj1 = 100;
console.log(objArr.some(e => arr.includes(e)));
console.log(objArr2.find(e => arr2.includes(e)));
console.log(objArr2.filter(e => arr2.includes(e)));
console.log(objArr2.reduce((accumulator, value) => accumulator + value, 0));
console.log(objArr2.sort());
console.log("

Execution Output ------------------:
check_v8_output.sh: 27: /home/v8/v8/output/x64.debug/d8: not found
