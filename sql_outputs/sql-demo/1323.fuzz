CREATE DATABASE IF NOT EXISTS sampleDB; USE sampleDB;
CREATE TABLE IF NOT EXISTS author(
	author_id INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
	author_name text
);
DESCRIBE author;
INSERT INTO author VALUES('John','Albert');
INSERT INTO author VALUES('Paul','John');
INSERT INTO author VALUES('John','Paul');
SELECT * FROM author;
SELECT a.author_id,a.author_name
FROM author a,author b,category c
WHERE a.author_id=b.author_id
AND b.author_id=c.cat_id
ORDER BY a.author_id;
SELECT a.author_id,b.author_name,
count(*) as num
FROM author a,author b,category c
WHERE a.author_id=b.author_id
AND b.author_id=c.cat_id
GROUP BY a.author_id
ORDER BY a.author_id;

--
-- You should use some kind of unique key in the database (primary key is preferred). For example, one could have the author_name as a unique field and the category_id as the foreign key to the category table and then you have the correct linkage between author_name and category_id. (An easy way to do this is to use the AUTO_INCREMENT keyword which allows you to generate automatically a unique integer value at insertion time)
COMMIT;
DROP DATABASE sampleDB;
