CREATE DATABASE IF NOT EXISTS sampleDB; USE sampleDB;
DROP TABLE IF EXISTS sampletable;
CREATE TABLE IF NOT EXISTS sampletable(id INT NOT NULL PRIMARY KEY, field1 VARCHAR(25), field2 VARCHAR(25)); 
INSERT INTO sampletable(id, field1, field2) VALUES(1, 'Hello', 'Golavia');
INSERT INTO sampletable(id, field1, field2) VALUES(2, 'World', 'Golavia');
SELECT * FROM sampletable;
CREATE DATABASE IF NOT EXISTS sampleDB; USE sampleDB;
DROP TABLE IF EXISTS sampletable;
CREATE TABLE IF NOT EXISTS sampletable(id INT NOT NULL PRIMARY KEY, field1 VARCHAR(25), field2 VARCHAR(50)); 
INSERT INTO sampletable(id, field1, field2) VALUES(1, 'Hello', 'Golavia');
INSERT INTO sampletable(id, field1, field2) VALUES(2, 'World', 'Golavia');
SELECT * FROM sampletable;
-- Create a view on sampletable
CREATE VIEW sampleview AS 
  SELECT s.field1 as 'SampleviewField1', s.field2 as 'SampleviewField'
  FROM sampletable t JOIN sampletable s ON t.field1 = s.field2
  WHERE t.id = 1;

SELECT * FROM sampleview;
CREATE DATABASE IF NOT EXISTS sampleDB; USE sampleDB;
DROP TABLE IF EXISTS test;
CREATE TABLE IF NOT EXISTS test(id INT NOT NULL, field1 VARCHAR(25)); 
INSERT INTO test(id, field1) VALUES(1, 'Hello');
INSERT INTO test(id, field1) VALUES(2, 'World');
INSERT INTO test (id, field1) VALUES(2,'Goodbye');
SELECT * FROM test;
-- Drop the views and test table
DROP VIEW IF EXISTS sampleview;
DROP TABLE IF EXISTS test;
-- Create a complex nested query that demonstrates the use of the JSON format for storing complex information and the use of CASE constructs.
CREATE DATABASE IF NOT EXISTS sampleDB;
USE sampleDB;
DROP TABLE IF EXISTS test;
CREATE TABLE IF NOT EXISTS test(id INT NOT NULL, name varchar(25), value1 TEXT, value2 INT); 
INSERT INTO test(id, name, value1, value2) VALUES(1, 'John', '{1,2,3}', 2);
INSERT INTO test(id, name, value1, value2) VALUES(2, 'Suzana', '{1,2,3}', 4);
INSERT INTO test(id, name, value1, value2) VALUES(3, 'Sukrit', '{1,2,3}', 5);
INSERT INTO test(id, name