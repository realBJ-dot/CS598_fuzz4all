CREATE DATABASE IF NOT EXISTS sampleDB; USE sampleDB;
DROP TABLE IF EXISTS employee;
DROP TABLE IF EXISTS department;
DROP TABLE IF EXISTS employee_salary;
DROP TABLE IF EXISTS employee_department;
-- Please create two tables employee and department of this structure
DROP TABLE IF EXISTS employee; DROP TABLE IF EXISTS employee_salary;
DELIMITER $$
CREATE TRIGGER on_create_employee
  BEFORE INSERT ON employee
  FOR EACH ROW
  INSERT INTO 
  employees (
    first_name,
    last_name,
    gender,
    birth_date,
    employee_id,
    department_no 
  ) 
  VALUES 
  ( 
    NEW.first_name,
    NEW.last_name,
    NEW.gender,
    NEW.birth_date,
    NEW.employee_id,
    NEW.department_no
  );

CREATE TRIGGER on_create_employee_salary
  AFTER INSERT ON employee
  FOR EACH ROW
  INSERT INTO 
  employee_salary (
    employee_id,
    bonus_rate,
    salary
  ) 
  VALUES
  ( 
    NEW.employee_id,
    NEW.bonus_rate*NEW.salary,
    NEW.salary
  );

DELIMITER ;
-- Please create an index employee_salary on employee_salary
-- This is not an optimal solution, you should optimize this index.
ALTER TABLE employee_salary ENGINE=InnoDB;
CREATE TABLE IF NOT EXISTS employee_salary (
  employee_id INTEGER NOT NULL,
  bonus_rate TINYINT NOT NULL,
  salary TINYINT
);
CREATE UNIQUE INDEX employee_salary_PRIMARY on employee_salary (employee_id, bonus_rate);
 
CREATE TABLE IF NOT EXISTS employee_department (
  department_no INTEGER NOT NULL,
  employee_id INTEGER
);

CREATE UNIQUE INDEX employee_department_PRIMARY on employee_department (department_no, employee_id);
-- Please insert new data in table employee
INSERT INTO employee (
  first_name,
  last_name,
  gender,
  birth_date,
  employee_id,
  department_no
) 
VALUES (
  'John',
  'Doe',
  0,
  '1990-04-11',
  1,
  3
);

INSERT INTO employee (
  first_name,
  last_name,
  gender,
  birth_date,
  employee_id,
  department_no
) 
VALUES (
  'Paul',
  'Doe',
  0,
  '1996-03-13',
  2,
  3
);

INSERT INTO employee (
  first_name,
  last_name,
  gender,
  birth_date