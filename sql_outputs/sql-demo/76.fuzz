USE sampleDB;
-- 1.   Print all the columns in the stocks table that are NOT null for the table.
-- 2.   Add a new column that holds the price for the item on sale at a given price.
-- 3.   Remove the column that holds the price for the item on sale at a given price.
-- Use an ENGINE=InnoDB query.
SELECT * FROM stocks WHERE price IS NULL;
INSERT INTO price (stock_id, item_id, price) VALUES (3812, 2, 100.00);
USE sampleDB;
-- Modify the program.
SELECT name, age FROM employees;
-- 1.   Print all the columns in the customers table.
-- 2.   Print all the columns in the customers table that are 'Married'
SELECT email, phone FROM customers WHERE married = 'Yes';
SELECT first_name, last_name FROM customers ORDER BY id ASC;
-- 1.   Print all the columns in the customers table.
-- 2.   Print all the columns in the customers table that are 'Married' and have married for more than 30 years
SELECT id, first_name, last_name, married FROM customers
WHERE married = 'Yes' AND age > 30;
-- 1.   Print all the columns in the customers table.
-- 2.   Print all the columns in the customers table
--   that are 'Married', 'Single', and have married for more than 30 years
SELECT first_name, last_name, married FROM customers WHERE married = 'Yes' OR married = 'Single' AND age > 30;
USE sampleDB;
-- 3.   Remove the customer that has the id of 2312.
DELETE FROM customers WHERE id = 2312;
-- 1.   Print all the columns in the customers table
--   that have 'Mali' as a first name or 'Married' for more than 10 years
SELECT first_name, last_name, married FROM customers
WHERE  first_name = 'Mali' OR married = 'Yes' AND age > 10;
-- 1.   Print all the columns in the customers table that
--   have not been purchased prior to 69
SELECT id, first_name, last_name FROM (SELECT id, first_name, last_name FROM (SELECT id, first_name, last_name FROM customers) where last_name IS NULL and MONTH(birth_date) < 69 ) WHERE id NOT IN (SELECT id FROM orderDetail