'use strict';
'use v8';
function mutateArray(p) {
    let newArr = x;
    newArr[0] = 1;
    x[1] = 2;
    x.splice(1, 1);
    return 2;
}
function deleteArrayValue() {
    x.splice(0, 1);
}
let x = [];
 
'use strict';
'use v8';
(function () {
    "use asm";
    function _emscripten_asm_tmp_228(i32x4_i64x2_i32x4){
        var idx = (i32x4 >> 8) >> 2;
        var idx0 = idx | 0;
        var idx1 = idx | 1;
        var idx2 = idx | 2;
        var idx3 = idx | 3;
        var idx2_0 = idx2 | 0;
        var idx0_0 = idx0 | 0;
        var idx1_0 = idx1 | 0;
        var idx3_0 = idx3 | 0;
        var idx1_1 = idx1 | 1;
        var idx2_1 = idx2 | 1;
        var idx0_1 = idx0 | 1;
        var idx1_2 = idx1 | 2;
        var idx2_2 = idx2 | 2;
        var idx0_2 = idx0 | 2;
        var idx1_3 = idx1 | 3;
        var idx2_3 = idx2 | 3;
        var idx0_3 = idx0 | 3;
        var idx2_4 = idx2 | 4;
        var idx0_4 = idx0 | 4;
        var idx1_4 = idx1 | 4;
        var idx2_5 = idx2 | 5;
        var idx0_5 = idx0 | 5;
        var idx1_5 = idx1 | 5;
        if ((i32x4 & (1 << 15))!= 0) {
            var value = (i32x4_i64x2_i32x4[idx | 0] | 0) + (i32x4_i64x2_i32x4[idx | 1] | 0) + ((i32x4_i64x2_i32x4[idx | 2] | 0) | 0) + (i32x4_i64x2_i32x4[idx | 3] | 0) + ((i32x4_i64x2_i32x4[idx0 | 0] | 0) | 0);
            if(idx < 20)
                return (i32x4_i64x2_

Execution Output ------------------:
check_v8_output.sh: 27: /home/v8/v8/output/x64.debug/d8: not found
