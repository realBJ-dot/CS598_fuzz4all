'use strict';
'use v8';
let x;
{
    let d;
    d = 10;
}
'use strict';
'use v8';
function changeValue(p) {
    const arr = { a: 1 };
    y.a = 2;
    y.b = "Hello World!";
    return 2;
}
ChangeValue(10);
console.log(x);
console.log(y);
 
"use v8";
const newProgram = new v8.code.Instruction(`
  (function(array, b) {
    (array[0] = 1);
    return 2;
  })(this, "Hello World");`);
v8.code.compile(newProgram, { mode: 'node', target: v8.target.NodeJS});
console.log("The complete Javascript Program as a string is " + v8.Script.toString(newProgram));
console.log("The final program's binary string is " + v8.Script.toBin(newProgram));
 
"use strict";
"use v8";
const result = v8.Script.compile(v8.Script.fromString(v8.Script.toBin(newProgram)), { mode: 'node', target: v8.target.NodeJS});
console.log(result.toSource());
console.log(typeof "use strict");
 
"use strict";
"use v8";
const source = "(function(a) { return a; }).call(this, 10)";
const compiled = v8.Script.compile(source, { mode: 'node', target: v8.target.NodeJS});
console.log(compiled.run());
console.log("The value is " + compiled.run());
 
const a = 10;
function value1(b) {
    return b + 2;
}
console.log(a, value1(), typeof value1, value1.name, value1.name === "value1");
 
(function (a, b, c) {
    a += 10;
    a += c;
})(a, b, c);
console.log("The value is " + a);
(function(a, b, c) {
    a += 10;
    a += c;
}).call

Execution Output ------------------:
check_v8_output.sh: 27: /home/v8/v8/output/x64.debug/d8: not found
